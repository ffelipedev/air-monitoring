# Usamos una imagen oficial de Python 3.11
FROM python:3.11-slim

# Evitamos que Python genere archivos pyc
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Configuramos el directorio de trabajo
WORKDIR /app

# Copiamos los archivos de dependencias primero
COPY requirements.txt .

# Instalamos dependencias del sistema y de Python
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && pip install --no-cache-dir -r requirements.txt \
    && apt-get remove -y build-essential \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# Copiamos todo el proyecto al contenedor
COPY . .

# Configuramos la variable de entorno PORT que Cloud Run requiere
ENV PORT 8080

# Exponemos el puerto 8080
EXPOSE 8080

# Comando para ejecutar Django con Gunicorn
# Reemplaza 'airmonitoring' por el nombre de tu carpeta principal de Django si es distinto
CMD python manage.py collectstatic --noinput && python manage.py migrate && gunicorn airmonitoring.wsgi:application --bind 0.0.0.0:$PORT

